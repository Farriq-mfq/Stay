async createPresenceByScanned(scanned: ScannedDto, gateway: gateways, client: Server): Promise<void> {
    const siswa = await this.prismaService.client.siswa.findUnique({
      where: {
        rfid_token: scanned.scan
      },
      include: {
        telegram_account: true
      }
    })

    if (!siswa) return;

    if (gateway.presence_sessionsId === null) {
      if (siswa.telegram_account) {
        await this.bot.telegram.sendMessage(siswa.telegram_account.chat_id, `<b>Maaf Perangkat ini masih belum bisa dibuka atau digunakan</b>`, {
          parse_mode: 'HTML'
        })
      }
    } else {
      // presence
      const session = await this.prismaService.client.presence_sessions.findUnique({
        where: {
          id: gateway.presence_sessionsId
        }
      })
      const checkPresenceAlready = await this.prismaService.client.presences.findFirst({
        where: {
          siswaId: siswa.id,
          presence_sessionsId: session.id,
          createdAt: {
            gte: new Date(new Date().setHours(0, 0, 0, 0))
          }
        },
        include: {
          siswa: true,
        }
      })

      if (checkPresenceAlready) {
        if (siswa.telegram_account) {
          await this.bot.telegram.sendMessage(siswa.telegram_account.chat_id, `<strong>Anda sudah melakukan presensi dengan detail presensi sebagai berikut</strong>  :\n\n<strong>Nama : </strong> ${checkPresenceAlready.siswa.name}\n<strong>Tanggal : </strong> ${format(new Date(checkPresenceAlready.createdAt), 'EEEE, d MMMM yyyy', { locale: id })}\n<strong>Lokasi : </strong> ${gateway.location}\n<strong>Sesi : </strong> ${session.name}\n<strong>Metode : </strong> ${checkPresenceAlready.method}`, {
            parse_mode: 'HTML'
          })
        }
        // whatsapp notification
        if (siswa.notelp) {
          await this.whatsappProvider.sendMessage({
            phone: [+siswa.notelp],
            message: "Maaf anda sudah melakukan presensi hari ini terimakasih :)"
          })
        }
        return;
      }

      const presence = await this.prismaService.client.presences.create({
        data: {
          siswaId: siswa.id,
          presence_sessionsId: gateway.presence_sessionsId,
          gatewaysId: gateway.id,
          method: 'card'
        }
      })
      if (presence) {
        // notify socket io
        client.emit(`PRESENCE_UPDATED_${session.id}`, true)
        if (siswa.telegram_account) {
          const htmlContent = `<strong>Terimakasih Telah melakukan presensi dengan detail presensi sebagai berikut</strong>  :\n\n<strong>Nama : </strong> ${siswa.name}\n<strong>Tanggal : </strong> ${format(new Date(presence.createdAt), 'EEEE, d MMMM yyyy', { locale: id })}\n<strong>Lokasi : </strong> ${gateway.location}\n<strong>Sesi : </strong> ${session.name}\n<strong>Metode : </strong> ${presence.method}
          `;
          await this.bot.telegram.sendMessage(siswa.telegram_account.chat_id, htmlContent, {
            parse_mode: 'HTML'
          })
        }

        // whatsapp notification
        if (siswa.notelp) {
          await this.whatsappProvider.sendMessage({
            phone: [+siswa.notelp],
            message: `*Terimakasih Telah melakukan presensi dengan detail presensi sebagai berikut*  :\n\n*Nama* :  ${siswa.name}\n*Tanggal* :  ${format(new Date(presence.createdAt), 'EEEE, d MMMM yyyy', { locale: id })}\n*Lokasi* :  ${gateway.location}\n*Sesi* :  ${session.name}\n*Metode* :  ${presence.method}
          `
          })
        }
      } else {
        if (siswa.telegram_account) {
          await this.bot.telegram.sendMessage(siswa.telegram_account.chat_id, `Perangkat masih dalam kendala`, {
            parse_mode: 'HTML'
          })
        }
      }
    }
  }