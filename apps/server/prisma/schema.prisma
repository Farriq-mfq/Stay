generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// master data
model siswa {
  id                  BigInt           @id @default(autoincrement())
  notelp              Int              @unique
  name                String
  nisn                Int
  nis                 Int
  rfid_token          String?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  presences           presences[]
  telegram            telegram_account @relation(fields: [telegram_accountsId], references: [id])
  telegram_accountsId BigInt           @unique
}

model users {
  id                 BigInt           @id @default(autoincrement())
  name               String
  username           String           @db.VarChar(255)
  password           String           @db.VarChar(255)
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  telegram_accounts  telegram_account @relation(fields: [telegram_accountId], references: [id])
  telegram_accountId BigInt           @unique
}

// fitur data
enum GatewayRole {
  presence // insert to presence table
  register // register the rfid to the database
}

model gateways {
  id                  BigInt             @id @default(autoincrement())
  token               String             @unique @db.VarChar()
  ip                  String             @unique @db.VarChar()
  location            String
  name                String
  role                GatewayRole
  status              Boolean            @default(true)
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  presences           presences[]
  presence_sessions   presence_sessions? @relation(fields: [presence_sessionsId], references: [id])
  presence_sessionsId BigInt?
}

// only role presences are allowed

model presence_sessions {
  id        BigInt     @id @default(autoincrement())
  name      String // example : PAI - AKIDAH DAN AKHLAK
  status    Boolean
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  gateways  gateways[]
}

model presences {
  id         BigInt    @id @default(autoincrement())
  siswa      siswa     @relation(fields: [siswaId], references: [id], onDelete: Cascade)
  siswaId    BigInt
  gateway    gateways? @relation(fields: [gatewaysId], references: [id], onDelete: SetNull)
  gatewaysId BigInt?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model telegram_account {
  id        BigInt   @id @default(autoincrement())
  username  String
  name      String
  chat_id   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  siswaId   BigInt   @unique
  siswa     siswa?
  users     users?
}
